# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)
skip_docs

platform :ios do
  desc "Run Tests"
  lane :tests do
    run_tests(workspace: "github-actions-demo-ios.xcworkspace",
               devices: ["iPhone 6s"],
               scheme: "github-actions-demo-iosTests")
  end

  desc "Push a new beta build to TestFlight"
  lane :beta do
    setup_ci if ENV['CI']
    
    app_store_connect_api_key(
      key_id: ENV["APP_STORE_CONNECT_API_KEY_ID"],
      issuer_id: ENV["APP_STORE_CONNECT_API_ISSUER_ID"],
      key_content: ENV["APP_STORE_CONNECT_API_KEY_CONTENT"]
    )

    match(
	git_url: ENV["GIT_URL"],
        type: "appstore",
        storage_mode: "git",	
        readonly: true
    )

    clear_derived_data

    gym(
        clean: true,
        workspace: "github-actions-demo-ios.xcworkspace",
        scheme: "github-actions-demo-ios",
        configuration: "Release",
        export_options: {
          method: "app-store",
          signingStyle: "manual"
        }
    )

    upload_to_testflight(skip_waiting_for_build_processing: true)
  end
  
  lane :set_version do |options|
    case options[:version]
    when "major", "minor", "patch"
      increment_version_number(bump_type: options[:version])
    else
      increment_version_number(version_number: options[:version])
    end
  
    increment_build_number(
      build_number: Time.new.strftime("%Y.%m%d.%H%M") 
     )
     version_number = "#{lane_context[SharedValues::VERSION_NUMBER]}(#{lane_context[SharedValues::BUILD_NUMBER]})"
    commit_version_bump(
      message: "업데이트 버전: #{version_number}"
    )
    add_git_tag(tag: "v#{version_number}")
    push_to_git_remote
  end   
end
